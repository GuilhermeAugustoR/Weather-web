/* eslint-disable react-hooks/exhaustive-deps */
import React from "react";
import Head from "next/head";
import Image from "next/image";
import styles from "@/styles/Home.module.css";
import weatherService from "@/services/weatherService";
import bg from "../../public/chuva.gif";

export default function Home() {
  const [data, setData] = React.useState<any>({});
  const [location, setLocation] = React.useState("");

  const getWeather = async () => {
    try {
      const result = await weatherService.getWeather({
        location,
      });

      if (!result) {
        console.log(result);
        return;
      }

      setData(result);
      console.log("result", result);
    } catch (error) {
      console.log(error);
      return;
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.app} style={{ backgroundImage: `url(${bg.src})` }}>
        <div className={styles.search}>
          <input
            className={styles.input}
            value={location}
            onChange={(event) => setLocation(event.target.value)}
            placeholder="Enter Location"
            type="text"
          />
          <button onClick={getWeather}>Pesquisar</button>
        </div>
        <div className={styles.container}>
          <div className={styles.top}>
            <div className={styles.location}>
              <p>{data.name}</p>
            </div>
            <div className={styles.temp}>
              {data.main ? <h1>{data.main.temp.toFixed()}°C</h1> : null}
            </div>
            <div className={styles.description}>
              {data.weather ? <p>{data.weather[0].main}</p> : null}
            </div>
          </div>

          {data.name !== undefined && (
            <div className={styles.bottom}>
              <div className={styles.feels}>
                {data.main ? (
                  <p className={styles.bold}>
                    {data.main.feels_like.toFixed()}°F
                  </p>
                ) : null}
                <p>Feels Like</p>
              </div>
              <div className={styles.humidity}>
                {data.main ? (
                  <p className={styles.bold}>{data.main.humidity}%</p>
                ) : null}
                <p>Humidity</p>
              </div>
              <div className={styles.wind}>
                {data.wind ? (
                  <p className={styles.bold}>{data.wind.speed.toFixed()} MPH</p>
                ) : null}
                <p>Wind Speed</p>
              </div>
            </div>
          )}
        </div>
      </div>
    </>
  );
}
